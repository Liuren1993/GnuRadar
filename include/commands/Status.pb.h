// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Status.proto

#ifndef PROTOBUF_Status_2eproto__INCLUDED
#define PROTOBUF_Status_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gnuradar {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Status_2eproto();
void protobuf_AssignDesc_Status_2eproto();
void protobuf_ShutdownFile_Status_2eproto();

class StatusMessage;

// ===================================================================

class StatusMessage : public ::google::protobuf::Message {
 public:
  StatusMessage();
  virtual ~StatusMessage();

  StatusMessage(const StatusMessage& from);

  inline StatusMessage& operator=(const StatusMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusMessage& default_instance();

  void Swap(StatusMessage* other);

  // implements Message ----------------------------------------------

  StatusMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusMessage& from);
  void MergeFrom(const StatusMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 head = 2;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 2;
  inline ::google::protobuf::int32 head() const;
  inline void set_head(::google::protobuf::int32 value);

  // required int32 tail = 3;
  inline bool has_tail() const;
  inline void clear_tail();
  static const int kTailFieldNumber = 3;
  inline ::google::protobuf::int32 tail() const;
  inline void set_tail(::google::protobuf::int32 value);

  // required int32 depth = 4;
  inline bool has_depth() const;
  inline void clear_depth();
  static const int kDepthFieldNumber = 4;
  inline ::google::protobuf::int32 depth() const;
  inline void set_depth(::google::protobuf::int32 value);

  // required int32 over_flow = 5;
  inline bool has_over_flow() const;
  inline void clear_over_flow();
  static const int kOverFlowFieldNumber = 5;
  inline ::google::protobuf::int32 over_flow() const;
  inline void set_over_flow(::google::protobuf::int32 value);

  // required int32 bytes_per_buffer = 6;
  inline bool has_bytes_per_buffer() const;
  inline void clear_bytes_per_buffer();
  static const int kBytesPerBufferFieldNumber = 6;
  inline ::google::protobuf::int32 bytes_per_buffer() const;
  inline void set_bytes_per_buffer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gnuradar.StatusMessage)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_tail();
  inline void clear_has_tail();
  inline void set_has_depth();
  inline void clear_has_depth();
  inline void set_has_over_flow();
  inline void clear_has_over_flow();
  inline void set_has_bytes_per_buffer();
  inline void clear_has_bytes_per_buffer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 head_;
  ::google::protobuf::int32 tail_;
  ::google::protobuf::int32 depth_;
  ::google::protobuf::int32 over_flow_;
  ::google::protobuf::int32 bytes_per_buffer_;
  friend void  protobuf_AddDesc_Status_2eproto();
  friend void protobuf_AssignDesc_Status_2eproto();
  friend void protobuf_ShutdownFile_Status_2eproto();

  void InitAsDefaultInstance();
  static StatusMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// StatusMessage

// required string name = 1;
inline bool StatusMessage::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatusMessage::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatusMessage::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatusMessage::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& StatusMessage::name() const {
  // @@protoc_insertion_point(field_get:gnuradar.StatusMessage.name)
  return *name_;
}
inline void StatusMessage::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:gnuradar.StatusMessage.name)
}
inline void StatusMessage::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:gnuradar.StatusMessage.name)
}
inline void StatusMessage::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gnuradar.StatusMessage.name)
}
inline ::std::string* StatusMessage::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:gnuradar.StatusMessage.name)
  return name_;
}
inline ::std::string* StatusMessage::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StatusMessage::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:gnuradar.StatusMessage.name)
}

// required int32 head = 2;
inline bool StatusMessage::has_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatusMessage::set_has_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatusMessage::clear_has_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatusMessage::clear_head() {
  head_ = 0;
  clear_has_head();
}
inline ::google::protobuf::int32 StatusMessage::head() const {
  // @@protoc_insertion_point(field_get:gnuradar.StatusMessage.head)
  return head_;
}
inline void StatusMessage::set_head(::google::protobuf::int32 value) {
  set_has_head();
  head_ = value;
  // @@protoc_insertion_point(field_set:gnuradar.StatusMessage.head)
}

// required int32 tail = 3;
inline bool StatusMessage::has_tail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StatusMessage::set_has_tail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StatusMessage::clear_has_tail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StatusMessage::clear_tail() {
  tail_ = 0;
  clear_has_tail();
}
inline ::google::protobuf::int32 StatusMessage::tail() const {
  // @@protoc_insertion_point(field_get:gnuradar.StatusMessage.tail)
  return tail_;
}
inline void StatusMessage::set_tail(::google::protobuf::int32 value) {
  set_has_tail();
  tail_ = value;
  // @@protoc_insertion_point(field_set:gnuradar.StatusMessage.tail)
}

// required int32 depth = 4;
inline bool StatusMessage::has_depth() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StatusMessage::set_has_depth() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StatusMessage::clear_has_depth() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StatusMessage::clear_depth() {
  depth_ = 0;
  clear_has_depth();
}
inline ::google::protobuf::int32 StatusMessage::depth() const {
  // @@protoc_insertion_point(field_get:gnuradar.StatusMessage.depth)
  return depth_;
}
inline void StatusMessage::set_depth(::google::protobuf::int32 value) {
  set_has_depth();
  depth_ = value;
  // @@protoc_insertion_point(field_set:gnuradar.StatusMessage.depth)
}

// required int32 over_flow = 5;
inline bool StatusMessage::has_over_flow() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StatusMessage::set_has_over_flow() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StatusMessage::clear_has_over_flow() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StatusMessage::clear_over_flow() {
  over_flow_ = 0;
  clear_has_over_flow();
}
inline ::google::protobuf::int32 StatusMessage::over_flow() const {
  // @@protoc_insertion_point(field_get:gnuradar.StatusMessage.over_flow)
  return over_flow_;
}
inline void StatusMessage::set_over_flow(::google::protobuf::int32 value) {
  set_has_over_flow();
  over_flow_ = value;
  // @@protoc_insertion_point(field_set:gnuradar.StatusMessage.over_flow)
}

// required int32 bytes_per_buffer = 6;
inline bool StatusMessage::has_bytes_per_buffer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StatusMessage::set_has_bytes_per_buffer() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StatusMessage::clear_has_bytes_per_buffer() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StatusMessage::clear_bytes_per_buffer() {
  bytes_per_buffer_ = 0;
  clear_has_bytes_per_buffer();
}
inline ::google::protobuf::int32 StatusMessage::bytes_per_buffer() const {
  // @@protoc_insertion_point(field_get:gnuradar.StatusMessage.bytes_per_buffer)
  return bytes_per_buffer_;
}
inline void StatusMessage::set_bytes_per_buffer(::google::protobuf::int32 value) {
  set_has_bytes_per_buffer();
  bytes_per_buffer_ = value;
  // @@protoc_insertion_point(field_set:gnuradar.StatusMessage.bytes_per_buffer)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gnuradar

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Status_2eproto__INCLUDED
